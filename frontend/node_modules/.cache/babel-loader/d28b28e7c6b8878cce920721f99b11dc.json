{"ast":null,"code":"var _jsxFileName = \"/Users/user/link-project/link/src/screens/SearchResult.js\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Header from \"../components/Main/Header\";\nimport SearchListing from '../components/SearchResults/SearchListing';\nimport NoMatches from \"../components/SearchResults/NoMatches\";\nimport Error404 from './Error404';\nimport \"./SearchResult.css\";\nimport Headernew from \"../components/Main/headernew\";\n\nfunction searchAlgorithmn(searchphrase, listing) {\n  searchphrase = searchphrase.toLowerCase().replace(/(<([^>]+)>)/ig, \"\");\n  let wordsInListings = listing.title + \" \" + listing.platform; // currently only searches for words in the title and platform property\n\n  wordsInListings = wordsInListings.toLowerCase().split(\" \");\n\n  if (wordsInListings.includes(searchphrase)) {\n    return listing;\n  } else return null;\n}\n\nconst SearchResult = props => {\n  const allListings = useSelector(state => state.listings.listings);\n  let query = props.location.search;\n  let listingsToDisplay = [];\n\n  if (query.slice(0, 8) === \"?phrase=\") {\n    let searchphrase = query.substring(8); // searchphrase = what the user typed\n\n    listingsToDisplay = allListings.map(listing => searchAlgorithmn(searchphrase, listing));\n    listingsToDisplay = listingsToDisplay.filter(listingToDisplay => listingToDisplay !== null);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"searchResultsPageBody\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, listingsToDisplay.length === 0 ? /*#__PURE__*/React.createElement(NoMatches, {\n      searchphrase: searchphrase,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }) : listingsToDisplay.map(listing => /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: \"/listing\",\n        search: `id=${listing.title}`,\n        listing: listing\n      },\n      key: listing.listingId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SearchListing, {\n      listing: listing,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    })))));\n  } else return /*#__PURE__*/React.createElement(Error404, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  });\n};\n\nexport default SearchResult;","map":{"version":3,"sources":["/Users/user/link-project/link/src/screens/SearchResult.js"],"names":["React","useSelector","Link","Header","SearchListing","NoMatches","Error404","Headernew","searchAlgorithmn","searchphrase","listing","toLowerCase","replace","wordsInListings","title","platform","split","includes","SearchResult","props","allListings","state","listings","query","location","search","listingsToDisplay","slice","substring","map","filter","listingToDisplay","width","length","pathname","listingId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AAEA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,aAAP,MAA0B,2CAA1B;AACA,OAAOC,SAAP,MAAsB,uCAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,oBAAP;AACA,OAAOC,SAAP,MAAsB,8BAAtB;;AAEA,SAASC,gBAAT,CAA0BC,YAA1B,EAAwCC,OAAxC,EAAiD;AAE/CD,EAAAA,YAAY,GAAGA,YAAY,CAACE,WAAb,GAA2BC,OAA3B,CAAmC,eAAnC,EAAmD,EAAnD,CAAf;AAEA,MAAIC,eAAe,GAAGH,OAAO,CAACI,KAAR,GAAgB,GAAhB,GAAsBJ,OAAO,CAACK,QAApD,CAJ+C,CAK/C;;AACAF,EAAAA,eAAe,GAAGA,eAAe,CAACF,WAAhB,GAA8BK,KAA9B,CAAoC,GAApC,CAAlB;;AAEA,MAAIH,eAAe,CAACI,QAAhB,CAAyBR,YAAzB,CAAJ,EAA2C;AACzC,WAAOC,OAAP;AACD,GAFD,MAGK,OAAO,IAAP;AACN;;AAED,MAAMQ,YAAY,GAAIC,KAAD,IAAW;AAE9B,QAAMC,WAAW,GAAGnB,WAAW,CAAEoB,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeA,QAA3B,CAA/B;AACA,MAAIC,KAAK,GAAGJ,KAAK,CAACK,QAAN,CAAeC,MAA3B;AACA,MAAIC,iBAAiB,GAAG,EAAxB;;AAEA,MAAIH,KAAK,CAACI,KAAN,CAAY,CAAZ,EAAc,CAAd,MAAmB,UAAvB,EAAkC;AAChC,QAAIlB,YAAY,GAAGc,KAAK,CAACK,SAAN,CAAgB,CAAhB,CAAnB,CADgC,CAEhC;;AAEAF,IAAAA,iBAAiB,GAAGN,WAAW,CAACS,GAAZ,CAAgBnB,OAAO,IAAIF,gBAAgB,CAACC,YAAD,EAAcC,OAAd,CAA3C,CAApB;AACAgB,IAAAA,iBAAiB,GAAGA,iBAAiB,CAACI,MAAlB,CAAyBC,gBAAgB,IAAIA,gBAAgB,KAAK,IAAlE,CAApB;AAEA,wBACE;AAAK,MAAA,KAAK,EAAG;AAACC,QAAAA,KAAK,EAAC;AAAP,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,SAAS,EAAG,uBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIN,iBAAiB,CAACO,MAAlB,KAA2B,CAA5B,gBACD,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAExB,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADC,GAEAiB,iBAAiB,CAACG,GAAlB,CAAsBnB,OAAO,iBAC5B,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG;AACTwB,QAAAA,QAAQ,EAAC,UADA;AAETT,QAAAA,MAAM,EAAE,MAAKf,OAAO,CAACI,KAAM,EAFlB;AAGTJ,QAAAA,OAAO,EAACA;AAHC,OAAX;AAGoB,MAAA,GAAG,EAAGA,OAAO,CAACyB,SAHlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKI,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAEzB,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADD,CAHH,CAFF,CADF;AA2BD,GAlCD,MAoCK,oBAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEN,CA5CD;;AA8CA,eAAeQ,YAAf","sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport {Link} from \"react-router-dom\";\n\nimport Header from \"../components/Main/Header\";\nimport SearchListing from '../components/SearchResults/SearchListing';\nimport NoMatches from \"../components/SearchResults/NoMatches\";\nimport Error404 from './Error404';\nimport \"./SearchResult.css\"\nimport Headernew from \"../components/Main/headernew\"\n\nfunction searchAlgorithmn(searchphrase, listing) {\n\n  searchphrase = searchphrase.toLowerCase().replace(/(<([^>]+)>)/ig,\"\")\n\n  let wordsInListings = listing.title + \" \" + listing.platform;\n  // currently only searches for words in the title and platform property\n  wordsInListings = wordsInListings.toLowerCase().split(\" \");\n\n  if (wordsInListings.includes(searchphrase)){\n    return listing;\n  }\n  else return null;\n}\n\nconst SearchResult = (props) => {\n\n  const allListings = useSelector((state) => state.listings.listings);\n  let query = props.location.search;\n  let listingsToDisplay = [];\n\n  if (query.slice(0,8)===\"?phrase=\"){\n    let searchphrase = query.substring(8);\n    // searchphrase = what the user typed\n\n    listingsToDisplay = allListings.map(listing => searchAlgorithmn(searchphrase,listing));\n    listingsToDisplay = listingsToDisplay.filter(listingToDisplay => listingToDisplay !== null );\n\n    return (\n      <div style= {{width:\"100%\"}} >\n        <Header />\n        <div className = \"searchResultsPageBody\">\n          {(listingsToDisplay.length===0)?\n          <NoMatches searchphrase={searchphrase}/>\n          :listingsToDisplay.map(listing => (\n            <Link to= {{\n              pathname:\"/listing\",\n              search:`id=${listing.title}`,\n              listing:listing}} key= {listing.listingId}>\n                { /*url = /listing/id?=(title of listing) */}\n                <SearchListing listing={listing} />\n            </Link>\n          )\n           \n          )}\n          {/* Todo: Add this section when backend is included (Alot easier with backend)\n          <hr />\n          <p style={{margin:\"20px\"}}>Check out some of our other listings on the same platform</p>\n          Call some API here\n          */}\n          \n        </div>\n      </div>\n    );\n\n  } \n\n  else return <Error404 />;\n  \n};\n\nexport default SearchResult;\n"]},"metadata":{},"sourceType":"module"}