{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marcus\\\\link\\\\frontend\\\\src\\\\screens\\\\SearchResult.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Header from \"../components/Main/Header\";\nimport SearchListing from \"../components/SearchResults/SearchListing\";\nimport NoMatches from \"../components/SearchResults/NoMatches\";\nimport \"./styles/SearchResult.css\";\nimport { useAPI } from \"../utils/useAPI\";\n\nconst SearchResult = props => {\n  const [sendRequest, isLoading] = useAPI();\n  const [matchedListings, setMatchedListings] = useState();\n  let query = props.location.search; // searchphrase = what the user typed\n\n  const searchphrase = query.substring(9);\n  const filteredphrase = searchphrase.toLowerCase().replace(/(<([^>]+)>)/ig, \"\").replace(\" \", \"-\"); // fix multiple api requests whenever searchphrase changes\n  // TODO: configure for multiple words\n\n  useEffect(() => {\n    // call express api to get search results \n    const getListings = async () => {\n      const responseData = await sendRequest(`/api/search/keyword/${filteredphrase}`);\n      setMatchedListings(responseData.matchedListings);\n    };\n\n    getListings();\n  }, [filteredphrase]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), !isLoading && matchedListings && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"searchResultsPageBody\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, matchedListings.length === 0 ?\n  /*#__PURE__*/\n  // No matches for what the user found\n  React.createElement(NoMatches, {\n    searchphrase: searchphrase,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }) : matchedListings.map(listing => /*#__PURE__*/React.createElement(Link, {\n    to: {\n      pathname: `/listing/${listing.title}`,\n      search: `${listing.listingId}`\n    },\n    key: listing.listingId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(SearchListing, {\n    listing: listing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  })))));\n};\n\nexport default SearchResult;","map":{"version":3,"sources":["C:/Users/marcus/link/frontend/src/screens/SearchResult.js"],"names":["React","useEffect","useState","Link","Header","SearchListing","NoMatches","useAPI","SearchResult","props","sendRequest","isLoading","matchedListings","setMatchedListings","query","location","search","searchphrase","substring","filteredphrase","toLowerCase","replace","getListings","responseData","width","length","map","listing","pathname","title","listingId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,aAAP,MAA0B,2CAA1B;AACA,OAAOC,SAAP,MAAsB,uCAAtB;AACA,OAAO,2BAAP;AACA,SAASC,MAAT,QAAuB,iBAAvB;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAM,CAACC,WAAD,EAAcC,SAAd,IAA2BJ,MAAM,EAAvC;AACA,QAAM,CAACK,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,EAAtD;AACA,MAAIY,KAAK,GAAGL,KAAK,CAACM,QAAN,CAAeC,MAA3B,CAH8B,CAK9B;;AACA,QAAMC,YAAY,GAAGH,KAAK,CAACI,SAAN,CAAgB,CAAhB,CAArB;AACA,QAAMC,cAAc,GAAGF,YAAY,CAACG,WAAb,GAA2BC,OAA3B,CAAmC,eAAnC,EAAoD,EAApD,EAAwDA,OAAxD,CAAgE,GAAhE,EAAqE,GAArE,CAAvB,CAP8B,CAS9B;AACA;;AAEApB,EAAAA,SAAS,CAAC,MAAM;AAEd;AACA,UAAMqB,WAAW,GAAG,YAAY;AAC9B,YAAMC,YAAY,GAAG,MAAMb,WAAW,CAAE,uBAAsBS,cAAe,EAAvC,CAAtC;AACAN,MAAAA,kBAAkB,CAACU,YAAY,CAACX,eAAd,CAAlB;AACD,KAHD;;AAIAU,IAAAA,WAAW;AAEZ,GATQ,EASN,CAACH,cAAD,CATM,CAAT;AAWA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEK,MAAAA,KAAK,EAAE;AAAT,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGG,CAACb,SAAD,IAAcC,eAAd,iBACC;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIA,eAAe,CAACa,MAAhB,KAA2B,CAA5B;AAAA;AACC;AACA,sBAAC,SAAD;AAAW,IAAA,YAAY,EAAER,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,GAGGL,eAAe,CAACc,GAAhB,CAAoBC,OAAO,iBAC3B,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE;AAAEC,MAAAA,QAAQ,EAAG,YAAWD,OAAO,CAACE,KAAM,EAAtC;AAAyCb,MAAAA,MAAM,EAAG,GAAEW,OAAO,CAACG,SAAU;AAAtE,KAAV;AACE,IAAA,GAAG,EAAEH,OAAO,CAACG,SADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAEH,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADA,CAJN,CAJJ,CADF;AA0BD,CAjDD;;AAmDA,eAAenB,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"../components/Main/Header\";\r\nimport SearchListing from \"../components/SearchResults/SearchListing\";\r\nimport NoMatches from \"../components/SearchResults/NoMatches\";\r\nimport \"./styles/SearchResult.css\";\r\nimport { useAPI } from \"../utils/useAPI\";\r\n\r\nconst SearchResult = (props) => {\r\n  const [sendRequest, isLoading] = useAPI();\r\n  const [matchedListings, setMatchedListings] = useState();\r\n  let query = props.location.search;\r\n\r\n  // searchphrase = what the user typed\r\n  const searchphrase = query.substring(9);\r\n  const filteredphrase = searchphrase.toLowerCase().replace(/(<([^>]+)>)/ig, \"\").replace(\" \", \"-\");\r\n\r\n  // fix multiple api requests whenever searchphrase changes\r\n  // TODO: configure for multiple words\r\n\r\n  useEffect(() => {\r\n\r\n    // call express api to get search results \r\n    const getListings = async () => {\r\n      const responseData = await sendRequest(`/api/search/keyword/${filteredphrase}`);\r\n      setMatchedListings(responseData.matchedListings);\r\n    };\r\n    getListings();\r\n\r\n  }, [filteredphrase]);\r\n\r\n  return (\r\n    <div style={{ width: \"100%\" }} >\r\n      <Header />\r\n      {/* components in the div below only loads after data has been retrieved from API */}\r\n      {!isLoading && matchedListings &&\r\n        <div className=\"searchResultsPageBody\">\r\n          {(matchedListings.length === 0) ?\r\n            // No matches for what the user found\r\n            <NoMatches searchphrase={searchphrase} />\r\n            : matchedListings.map(listing => (\r\n              <Link to={{ pathname: `/listing/${listing.title}`, search: `${listing.listingId}` }}\r\n                key={listing.listingId}>\r\n                { /*url = /listing/?(title of listing) */}\r\n                <SearchListing listing={listing} />\r\n              </Link>\r\n            ))\r\n          }\r\n          {/* Todo: Add this section when backend is included (Alot easier with backend)\r\n          <hr />\r\n          <p style={{margin:\"20px\"}}>Check out some of our other listings on the same platform</p>\r\n          Call some API here\r\n          */}\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResult;\r\n"]},"metadata":{},"sourceType":"module"}