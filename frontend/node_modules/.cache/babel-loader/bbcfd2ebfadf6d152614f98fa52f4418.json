{"ast":null,"code":"var _jsxFileName = \"/Users/user/link-project/link/frontend/src/screens/SearchResult.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Header from \"../components/Main/Header\";\nimport SearchListing from '../components/SearchResults/SearchListing';\nimport NoMatches from \"../components/SearchResults/NoMatches\";\nimport Error404 from './Error404';\nimport \"./SearchResult.css\";\nimport Headernew from \"../components/Main/headernew\";\n\nconst SearchResult = props => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [matchedListings, setMatchedListings] = useState();\n  let query = props.location.search;\n  let searchphrase = query.substring(8); // searchphrase = what the user typed\n\n  searchphrase = searchphrase.toLowerCase().replace(/(<([^>]+)>)/ig, \"\");\n  useEffect(() => {\n    setIsLoading(true); // call express api to get search results \n\n    const getListings = async () => {\n      try {\n        // returns an array of listings\n        const response = await fetch(`http://localhost:5000/api/search/keyword/switch`);\n        setMatchedListings(response.json().matchedListings);\n      } catch (err) {\n        // Todo: Add Error Handling if API call fails\n        console.log(err);\n      }\n\n      setIsLoading(false);\n    };\n\n    getListings();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), !isLoading && matchedListings && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"hi\"));\n};\n\nexport default SearchResult;","map":{"version":3,"sources":["/Users/user/link-project/link/frontend/src/screens/SearchResult.js"],"names":["React","useEffect","useState","Link","Header","SearchListing","NoMatches","Error404","Headernew","SearchResult","props","isLoading","setIsLoading","matchedListings","setMatchedListings","query","location","search","searchphrase","substring","toLowerCase","replace","getListings","response","fetch","json","err","console","log","width"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,aAAP,MAA0B,2CAA1B;AACA,OAAOC,SAAP,MAAsB,uCAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,oBAAP;AACA,OAAOC,SAAP,MAAsB,8BAAtB;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAE5B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACW,eAAD,EAAiBC,kBAAjB,IAAuCZ,QAAQ,EAArD;AACA,MAAIa,KAAK,GAAGL,KAAK,CAACM,QAAN,CAAeC,MAA3B;AAEA,MAAIC,YAAY,GAAGH,KAAK,CAACI,SAAN,CAAgB,CAAhB,CAAnB,CAN4B,CAO5B;;AACAD,EAAAA,YAAY,GAAGA,YAAY,CAACE,WAAb,GAA2BC,OAA3B,CAAmC,eAAnC,EAAmD,EAAnD,CAAf;AAEApB,EAAAA,SAAS,CAAC,MAAI;AACZW,IAAAA,YAAY,CAAC,IAAD,CAAZ,CADY,CAGZ;;AACA,UAAMU,WAAW,GAAG,YAAW;AAC7B,UAAG;AACD;AACA,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,iDAAF,CAA5B;AACAV,QAAAA,kBAAkB,CAACS,QAAQ,CAACE,IAAT,GAAgBZ,eAAjB,CAAlB;AAED,OALD,CAKE,OAAMa,GAAN,EAAU;AACV;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;;AACDd,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAXD;;AAYAU,IAAAA,WAAW;AAEZ,GAlBQ,EAkBP,EAlBO,CAAT;AAoBE,sBACE;AAAK,IAAA,KAAK,EAAG;AAACO,MAAAA,KAAK,EAAC;AAAP,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEG,CAAClB,SAAD,IAAcE,eAAd,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHJ,CADF;AAUH,CAxCD;;AA0CA,eAAeJ,YAAf","sourcesContent":["import React,{useEffect,useState} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Header from \"../components/Main/Header\";\nimport SearchListing from '../components/SearchResults/SearchListing';\nimport NoMatches from \"../components/SearchResults/NoMatches\";\nimport Error404 from './Error404';\nimport \"./SearchResult.css\"\nimport Headernew from \"../components/Main/headernew\"\n\nconst SearchResult = props => {\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [matchedListings,setMatchedListings] = useState();\n  let query = props.location.search;\n\n  let searchphrase = query.substring(8);\n  // searchphrase = what the user typed\n  searchphrase = searchphrase.toLowerCase().replace(/(<([^>]+)>)/ig,\"\")\n\n  useEffect(()=>{\n    setIsLoading(true);\n  \n    // call express api to get search results \n    const getListings = async () =>{\n      try{\n        // returns an array of listings\n        const response = await fetch(`http://localhost:5000/api/search/keyword/switch`);\n        setMatchedListings(response.json().matchedListings);\n\n      } catch(err){\n        // Todo: Add Error Handling if API call fails\n        console.log(err);\n      }\n      setIsLoading(false);\n    }\n    getListings();\n\n  },[]);\n\n    return (\n      <div style= {{width:\"100%\"}} >\n        <Header />\n        {!isLoading && matchedListings &&\n          <div>hi</div>\n        }\n      </div>\n        \n    );\n  \n};\n\nexport default SearchResult;\n"]},"metadata":{},"sourceType":"module"}